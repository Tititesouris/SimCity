breed [intersections intersection]
intersections-own [
  directions
]

to loadIntersections
  file-open "intersections.txt"
  while [not file-at-end?] [
    let :x file-read
    let :y file-read
    let :north (file-read = 1)
    let :east (file-read = 1)
    let :south (file-read = 1)
    let :west (file-read = 1)
    create-intersections 1 [initIntersection :x :y :north :east :south :west]
  ]
  file-close
end

to initIntersection [:x :y :north :east :south :west]
  setxy :x :y
  set heading 0
  set directions no-patches
  let :nbDirections 0
  let :direction 0
  if :north [
    set directions (patch-set directions (patch-at 0 1))
    set :nbDirections :nbDirections + 1
    set :direction 0
  ]
  if :east [
    set directions (patch-set directions (patch-at 1 0))
    set :nbDirections :nbDirections + 1
    set :direction 90
  ]
  if :south [
    set directions (patch-set directions (patch-at 0 -1))
    set :nbDirections :nbDirections + 1
    if not :west [
      set :direction 180
    ]
  ]
  if :west [
    set directions (patch-set directions (patch-at -1 0))
    set :nbDirections :nbDirections + 1
    if not :north [
      set :direction 270
    ]
  ]
  set shape word "intersection " :nbDirections
  set color black
  set heading :direction
end