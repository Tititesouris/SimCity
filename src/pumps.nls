breed [pumps pump]
pumps-own [
  electricityUsage ; Electricity usage in Wh
  electricityStored ; Current amount of electricity in the pump in W
  waterUsage ; Water usage in L/h
  waterStored ; Current amount of water in the pump in L
  production ; Amount of water produced in L/h
  entrance ; Patch of road to enter and exit the pump
]

to loadPumps
  carefully [
    file-open "pumps.txt"
    while [not file-at-end?] [
      let :x file-read
      let :y file-read
      let :production file-read
      create-pumps 1 [initPump :x :y :production]
    ]
    file-close
  ][]
end

to savePumps
  carefully [file-delete "pumps.txt"][]
  file-open "pumps.txt"
  ask pumps [
    file-print (word pxcor " " pycor " " production)
  ]
  file-close
end

to initPump [:x :y :production]
  initResourceConsumer
  setxy :x :y
  set production :production
  set entrance one-of neighbors4 with [pcolor = roadColor]
  face entrance

  set size 1.8
  set color blue
end

to updatePump
  set electricityUsage 0.25 * production
  set waterUsage 0
  updateResourceConsumer
  
  if (time mod hourLength = 0) and electricityStored > 0 [
    let :amount production
    ask entrance [
      sprout-waters 1 [initResource xcor ycor (3 * hourLength) :amount set color blue]
    ]
  ]
end

to-report pumpText
  report production
end