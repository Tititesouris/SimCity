breed [movingtrucks movingtruck]
movingtrucks-own [
  speed ; Movement speed of the moving truck
  reach ; Number of ticks the moving truck can still drive for
  passengers ; List of persons in the moving truck
]

to initMovingtruck [:x :y :reach :passengers]
  set speed vehicleSpeed
  set reach :reach
  set passengers :passengers
  ask passengers [move-to myself]

  set size 1
  set color (10 * (random 14) + 5)
  face one-of neighbors4 with [pcolor = highwayColor]
end

to updateMovingtruck
  ask passengers [move-to myself]
  ifelse reach > 0 [
    fd speed
    set reach reach - 1
    if distance patch-here < (speed / 2) [
      move-to patch-here

      let :intersection one-of intersections-here
      ifelse :intersection != nobody [
        randomIntersectionBehavior :intersection
      ][
        let :patchAhead patch-ahead 1
        if (:patchAhead = nobody) or (not member? ([pcolor] of :patchAhead) (list roadColor highwayColor)) [
          let :directions no-patches
          ask patch-here [set :directions neighbors4 with [pcolor = roadColor or pcolor = highwayColor]]
          face one-of :directions
        ]
      ]
    ]
  ][
    ask passengers [die]
    die
  ]
end

to movingtruckDropOff [:droppedOffPassengers]
  set passengers passengers with [not member? self :droppedOffPassengers]
  if count passengers <= 0 [
    die
  ]
end

to-report movingtruckText
	report count passengers
end